/**
 * Provides maven specific actions, e.g. publish
 */
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'maven-publish'

repositories { mavenCentral() }

configurations { deployerJars }

dependencies {
  testCompile 'junit:junit:4.8+'
  deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}


uploadArchives {
  if (!project.hasProperty('username')) {
    ext.username = ''
  }
  if (!project.hasProperty('password')) {
    ext.password = ''
  }
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      pom.artifactId = project.name
      repository(url: "scp://maven2.webmedia.int/var/www/html/") {
        authentication(userName: username, password: password)
      }
    }
  }
}
uploadArchives.doFirst {
  if (!project.hasProperty('username') || username == "" || !project.hasProperty('password') || password == "") {
    throw new InvalidUserDataException("-Pusername or -Ppassword parameters are missing")
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      
      artifact sourceJar {
        classifier "sources"
      }
      
      pom.withXml {
        asNode().dependencies.'*'.findAll() {
            it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                dep.name == it.artifactId.text()
            }
        }.each() {
            it.scope*.value = 'compile'
        }
      }
    }
  }
}